package dk.bitmovers.timeregistration.model;

// Generated Jun 1, 2015 4:50:21 AM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * WorkClockEvent generated by hbm2java
 */
@Entity
@Table(name = "work_clock_event", catalog = "timereg")
public class WorkClockEvent implements java.io.Serializable {

	private Integer id;
	private User user;
	private WorkClockEventType workClockEventType;
	private Date created;
	private Set registrationEvents = new HashSet(0);

	public WorkClockEvent() {
	}

	public WorkClockEvent(User user, WorkClockEventType workClockEventType,
			Date created) {
		this.user = user;
		this.workClockEventType = workClockEventType;
		this.created = created;
	}

	public WorkClockEvent(User user, WorkClockEventType workClockEventType,
			Date created, Set registrationEvents) {
		this.user = user;
		this.workClockEventType = workClockEventType;
		this.created = created;
		this.registrationEvents = registrationEvents;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "work_clock_event_type_id", nullable = false)
	public WorkClockEventType getWorkClockEventType() {
		return this.workClockEventType;
	}

	public void setWorkClockEventType(WorkClockEventType workClockEventType) {
		this.workClockEventType = workClockEventType;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "workClockEvent")
	public Set getRegistrationEvents() {
		return this.registrationEvents;
	}

	public void setRegistrationEvents(Set registrationEvents) {
		this.registrationEvents = registrationEvents;
	}

}
