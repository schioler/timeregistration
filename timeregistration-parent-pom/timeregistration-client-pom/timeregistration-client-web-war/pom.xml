<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>timeregistration-client-web-war</artifactId>
	<version>0.5</version>
	<packaging>war</packaging>
	<name>timeregistration-client-gui-war</name>
	<parent>
		<groupId>dk.schioler.tools.timeregistration.client</groupId>
		<artifactId>timeregistration-client-pom</artifactId>
		<version>1.0</version>
	</parent>
	<properties>
		<vaadin.version>7.4.7</vaadin.version>
		<vaadin.plugin.version>${vaadin.version}</vaadin.plugin.version>
		<jetty.plugin.version>9.2.3.v20140905</jetty.plugin.version>
		<project.source.version>1.7</project.source.version>
		<project.target.version>1.7</project.target.version>
		<project.encoding>UTF-8</project.encoding>
	</properties>
	<repositories>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
		<repository>
			<id>vaadin-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<version>${vaadin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-client-compiled</artifactId>
				<version>${vaadin.version}</version>
			</dependency>
			<dependency>
				<groupId>org.peimari</groupId>
				<artifactId>dawn</artifactId>
				<version>4</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>dk.schioler.tools.timeregistration.common</groupId>
			<artifactId>timeregistration-common-web-jar</artifactId>
		</dependency>
		<dependency>
			<groupId>dk.schioler.tools.timeregistration.common</groupId>
			<artifactId>timeregistration-common-jar</artifactId>
		</dependency>
		<dependency>
			<groupId>dk.schioler.tools.timeregistration.common</groupId>
			<artifactId>timeregistration-common-hibernate</artifactId>
		</dependency>
		<dependency>
			<groupId>dk.schioler.tools.timeregistration.common</groupId>
			<artifactId>timeregistration-common-hibernate-mapping</artifactId>
		</dependency>
		<dependency>
			<artifactId>timeregistration-common-model</artifactId>
			<groupId>dk.schioler.tools.timeregistration.common</groupId>
		</dependency>
		<!-- XXX -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP-java6</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>
<!-- 		<dependency> -->
<!-- 			<groupId>com.vaadin</groupId> -->
<!-- 			<artifactId>vaadin-server</artifactId> -->
<!-- 		</dependency> -->
<!-- 		<dependency> -->
<!-- 			<groupId>com.vaadin</groupId> -->
<!-- 			<artifactId>vaadin-push</artifactId> -->
<!-- 		</dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>com.vaadin</groupId> -->
		<!-- <artifactId>vaadin-client</artifactId> -->
		<!-- </dependency> -->
		<!-- Needed when using the widgetset optimizer (custom ConnectorBundleLoaderFactory). For widgetset compilation, vaadin-client-compiler is automatically added on the compilation classpath 
			by vaadin-maven-plugin so normally there is no need for an explicit dependency. -->
		<!-- <dependency> <groupId>com.vaadin</groupId> <artifactId>vaadin-client-compiler</artifactId> <scope>provided</scope> </dependency> -->
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-themes</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client-compiled</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-widgets</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-spring</artifactId>
			<version>1.0.0.beta1</version>
		</dependency>
<!-- 		<dependency> -->
<!-- 			<groupId>org.peimari</groupId> -->
<!-- 			<artifactId>dawn</artifactId> -->
<!-- 		</dependency> -->
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<warSourceDirectory>webapp</warSourceDirectory>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<!-- Exclude some unnecessary files generated by the GWT compiler. -->
					<packagingExcludes>WEB-INF/classes/VAADIN/gwt-unitCache/**, WEB-INF/classes/VAADIN/widgetsets/WEB-INF/**</packagingExcludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${vaadin.plugin.version}</version>
				<configuration>
					<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
					<webappDirectory>${basedir}/target/classes/VAADIN/widgetsets</webappDirectory>
					<draftCompile>false</draftCompile>
					<compileReport>false</compileReport>
					<style>OBF</style>
					<strict>true</strict>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>update-widgetset</goal>
							<goal>compile</goal>
							<!-- disabled by default to use on-the-fly theme compilation -->
							<!-- <goal>compile-theme</goal> -->
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
				<!-- TODO Remove when http://dev.vaadin.com/ticket/14924 is resolved -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.vaadin</groupId>
										<artifactId> vaadin-maven-plugin 
										</artifactId>
										<versionRange>[7.1.11,)</versionRange>
										<goals>
											<goal>resources</goal>
											<goal>update-widgetset</goal>
											<goal>compile</goal>
											<goal>compile-theme</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>